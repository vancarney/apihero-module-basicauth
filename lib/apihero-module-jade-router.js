// Generated by CoffeeScript 1.9.3
var RouteManager, RoutesMonitor, _, fs, path;

fs = require('fs');

path = require('path');

_ = require('lodash');

module.exports.init = function(app, options) {
  var _routes, views;
  views = [(path.dirname(__dirname)) + "/assets", (app_root || process.cwd()) + "/views"];
  _routes = [];
  return app.once('ahero-initialized', (function(_this) {
    return function() {
      var _routeManager, done;
      done = _.after(app.ApiHero.loadedModules.length, function() {
        app.set('view engine', 'jade');
        app.set('views', views);
        return console.log("views: " + views);
      });
      _routeManager = RouteManager.getInstance().on('initialized', function(routes) {
        var generateRoute;
        _routes = routes;
        generateRoute = function(route, callback) {
          return _routeManager.createRoute(route, function(e) {
            if (e != null) {
              return console.log(e);
            }
            return setTimeout(((function(_this) {
              return function() {
                return (require("" + route.route_file)).init(app);
              };
            })(this)), 1300);
          });
        };
        _.each(routes, function(route) {
          return generateRoute(route);
        });
        return app.ApiHero.createSyncInstance('route', RoutesMonitor).addSyncHandler('route', 'added', function(op) {
          return _routeManager.load(function(e, r) {
            var ref, route;
            if ((ref = (route = _.where(r, {
              route_file: op.name
            }))) != null ? ref.length : void 0) {
              return generateRoute(route[0]);
            }
          });
        }).addSyncHandler('route', 'removed', function(op) {
          return fs.unlink(op.name + ".js", function(e) {
            if (e != null) {
              return console.log(e);
            }
          });
        });
      });
      if (!app.ApiHero.loadedModules.length) {
        return done();
      }
      return _.each(app.ApiHero.loadedModules, function(name) {
        var i, len, module, ref;
        if (!(module = require(name)).hasOwnProperty('paths' && module.paths.length > 1)) {
          done();
        }
        ref = module.paths;
        for (i = 0, len = ref.length; i < len; i++) {
          path = ref[i];
          if ((path.match(/\.jade+$/)) != null) {
            views.push(path);
          }
        }
        views = _.uniq(_.flatten(views));
        return done();
      });
    };
  })(this));
};

RouteManager = require('./RouteManager');

RoutesMonitor = require('./RoutesMonitor');
