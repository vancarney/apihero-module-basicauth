// Generated by CoffeeScript 1.9.0
var RouteManager, RoutesMonitor, fs, path, _;

fs = require('fs');

path = require('path');

_ = require('lodash');

module.exports.init = function(app, options) {
  var views;
  views = ['./views'];
  return app.once('ahero-initialized', (function(_this) {
    return function() {
      var done, _routeManager;
      done = _.after(app.ApiHero.loadedModules.length, function() {
        app.set('view engine', 'jade');
        return app.set('views', views);
      });
      _routeManager = RouteManager.getInstance().on('initialized', function() {
        console.log('initialized');
        return app.ApiHero.createSyncInstance('route', RoutesMonitor).addSyncHandler('route', 'added', function(op) {
          var route, _ref;
          if ((_ref = (route = _routeManager.getRoute(op.name))) != null ? _ref.length : void 0) {
            return _routeManager.createRoute(route[0], function(e) {
              if (e != null) {
                return console.log(e);
              }
              return setTimeout(((function(_this) {
                return function() {
                  return (require("" + (path.join(process.cwd(), route[0].route_file)))).init(app);
                };
              })(this)), 100);
            });
          }
        }).addSyncHandler('route', 'removed', function(op) {
          return fs.unlink(op.name + ".js", function(e) {
            if (e != null) {
              return console.log(e);
            }
          });
        });
      });
      if (!app.ApiHero.loadedModules.length) {
        return done();
      }
      return _.each(app.ApiHero.loadedModules, function(name) {
        var module, _i, _len, _ref;
        if (!(module = require(name)).hasOwnProperty('paths' && module.paths.length > 1)) {
          done();
        }
        _ref = module.paths;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          path = _ref[_i];
          if ((path.match(/\.jade+$/)) != null) {
            views.push(path);
          }
        }
        views = _.flatten(views);
        return done();
      });
    };
  })(this));
};

RouteManager = require('./RouteManager');

RoutesMonitor = require('./RoutesMonitor');
